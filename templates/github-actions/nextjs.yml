name: Build & Upload Snapshots
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  BUILD_ID: ${{ github.sha }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Next.js application
        env:
          NEXT_PUBLIC_BASE_URL: ${{ secrets.BASE_URL }}
        run: |
          npm run build
          
      - name: Export static pages
        run: |
          npm run export || npx next export -o out
          
      - name: Verify export
        run: |
          if [ ! -f out/index.html ]; then
            echo "Error: Export failed - index.html not found"
            exit 1
          fi
          echo "Export successful - found $(find out -name '*.html' | wc -l) HTML files"
          
      - name: Generate manifest
        run: |
          cat > out/manifest.json << EOF
          {
            "build_id": "${{ env.BUILD_ID }}",
            "domain": "${{ secrets.PRERENDER_DOMAIN }}",
            "timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "route_count": $(find out -name '*.html' | wc -l),
            "routes": $(find out -name '*.html' -type f | sed 's|out||' | sed 's|/index.html|/|' | sed 's|.html||' | jq -R . | jq -s .),
            "trailingSlash": true,
            "basePath": "",
            "surrogate_key": "prerender-${{ secrets.PRERENDER_SITE_ID }}"
          }
          EOF
          
      - name: Upload snapshots to storage
        env:
          SNAPSHOT_TOKEN: ${{ secrets.PRERENDER_SNAPSHOT_TOKEN }}
          SITE_ID: ${{ secrets.PRERENDER_SITE_ID }}
          DOMAIN: ${{ secrets.PRERENDER_DOMAIN }}
        run: |
          # This script will be provided by the platform
          # It uploads the out/ directory to Cloudflare R2
          curl -X POST https://api.prerenderhost.io/v1/upload \
            -H "Authorization: Bearer $SNAPSHOT_TOKEN" \
            -F "siteId=$SITE_ID" \
            -F "buildId=$BUILD_ID" \
            -F "files=@out.tar.gz"
          
      - name: Notify platform
        env:
          API_TOKEN: ${{ secrets.PRERENDER_API_TOKEN }}
          SITE_ID: ${{ secrets.PRERENDER_SITE_ID }}
        run: |
          ROUTE_COUNT=$(find out -name '*.html' | wc -l)
          
          curl -X POST https://api.prerenderhost.io/v1/builds/upload-complete \
            -H "Authorization: Bearer $API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "site_id": "'$SITE_ID'",
              "build_id": "'$BUILD_ID'",
              "route_count": '$ROUTE_COUNT'
            }'
